name: Docker
on:
  push:
    branches:
      - master
      - next
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - context: ./back
            dockerfile: Dockerfile
            label: back
            image: ${{ github.repository_owner }}/kyoo_back

          - context: ./back
            dockerfile: Dockerfile.migrations
            label: migrations
            image: ${{ github.repository_owner }}/kyoo_migrations

          - context: ./api
            dockerfile: Dockerfile
            label: api
            image: ${{ github.repository_owner }}/kyoo_api

          - context: ./front
            dockerfile: Dockerfile
            label: front
            image: ${{ github.repository_owner }}/kyoo_front

          - context: ./scanner
            dockerfile: Dockerfile
            label: scanner
            image: ${{ github.repository_owner }}/kyoo_scanner

          - context: ./autosync
            dockerfile: Dockerfile
            label: autosync
            image: ${{ github.repository_owner }}/kyoo_autosync

          - context: ./transcoder
            dockerfile: Dockerfile
            label: transcoder
            image: ${{ github.repository_owner }}/kyoo_transcoder

          - context: ./auth
            dockerfile: Dockerfile
            label: auth
            image: ${{ github.repository_owner }}/keibi
    env:
      DOCKERHUB_ENABLED: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD && 'true' || 'false' }}
    name: Build ${{matrix.label}}
    steps:
      - uses: actions/checkout@v5

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            should_run:
              - '${{matrix.context}}/**'

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/${{matrix.image}},enable=${{ env.DOCKERHUB_ENABLED }}
            ghcr.io/${{matrix.image}}
          tags: |
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Check if a package should be pushed
        run: |
          echo "SHOULD_PUSH=$([ "${GITHUB_REF##*/}" == "master" ] || [ "${GITHUB_REF##*/}" == "next" ] || [ "${GITHUB_REF_TYPE}" == "tag" ] && echo "true" || echo "false")" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: env.SHOULD_PUSH == 'true' && env.DOCKERHUB_ENABLED == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: env.SHOULD_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        if: steps.filter.outputs.should_run == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.event.ref, 'refs/tags/v')
        with:
          context: ${{matrix.context}}
          file: ${{matrix.context}}/${{matrix.dockerfile}}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=0.0.0
          push: ${{env.SHOULD_PUSH}}
          tags: ${{steps.meta.outputs.tags}}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sync README.MD
        if: env.SHOULD_PUSH == 'true' && env.DOCKERHUB_ENABLED == 'true'
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ matrix.image }}
          readme: "./README.md"
