# vi: ft=sh
# shellcheck disable=SC2034


# Useful config options

# Library root can either be an absolute path or a relative path to your docker-compose.yml file.
LIBRARY_ROOT=./video
CACHE_ROOT=/tmp/kyoo_cache
LIBRARY_LANGUAGES=en
# A pattern (regex) to ignore video files.
LIBRARY_IGNORE_PATTERN=".*/[dD]ownloads?/.*"


# Available modes: open, logged, verif, invite
#  open means anyone can use your instance, even without an account (guest mode is enabled). To specify guest permissions, see UNLOGGED_PERMISSIONS.
#  verif means anyone can create an account but their account needs to be manually verified by an admin before they can use kyoo
#  invite means only created and verified accounts can access your instance. to allow someone else to use your instance, you need to invite them.
SECURITY_MODE=verif

# Specify permissions of guest accounts. By default, if security mode is not open, this is empty.
# You can specify this even if security mode is not open to allow guests users to see your
# collection without behing able to play videos for example.
# Default if SECURITY_MODE is open:
# UNLOGGED_PERMISSIONS=overall.read,overall.play
# Default if SECURITY_MODE is not open:
# UNLOGGED_PERMISSIONS=
# To allow anyone to browse your collection but prevent them from playing a video:
# UNLOGGED_PERMISSIONS=overall.read

# Specify permissions of new accounts.
# DEFAULT_PERMISSIONS=overall.read,overall.play


# Hardware transcoding (equivalent of --profile docker compose option).
COMPOSE_PROFILES= # vaapi or qsv or nvidia
# the preset used during transcode. faster means worst quality, you can probably use a slower preset with hwaccels
# warning: using vaapi hwaccel disable presets (they are not supported).
GOCODER_PRESET=fast


# The following two values should be set to a random sequence of characters.
# You MUST change thoses when installing kyoo (for security)
AUTHENTICATION_SECRET="4c@mraGB!KRfF@kpS8739y9FcHemKxBsqqxLbdR?"
# You can input multiple api keys separated by a ,
KYOO_APIKEYS=t7H5!@4iMNsAaSJQ49pat4jprJgTcF656if#J3

THEMOVIEDB_APIKEY=

# The url you can use to reach your kyoo instance. This is used during oidc to redirect users to your instance.
PUBLIC_URL=http://localhost:5000

# Use a builtin oidc service (google or discord):
# When you create a client_id, secret combo you may be asked for a redirect url. You need to specify https://YOUR-PUBLIC-URL/api/auth/logged/YOUR-SERVICE-NAME
# OIDC_DISCORD_CLIENTID=
# OIDC_DISCORD_SECRET=
# Or add your custom one:
OIDC_SERVICE_NAME=YourPrettyName
OIDC_SERVICE_LOGO=https://url-of-your-logo.com
OIDC_SERVICE_CLIENTID=
OIDC_SERVICE_SECRET=
OIDC_SERVICE_AUTHORIZATION=https://url-of-the-authorization-endpoint-of-the-oidc-service.com/auth
OIDC_SERVICE_TOKEN=https://url-of-the-token-endpoint-of-the-oidc-service.com/token
OIDC_SERVICE_PROFILE=https://url-of-the-profile-endpoint-of-the-oidc-service.com/userinfo
OIDC_SERVICE_SCOPE="the list of scopes space separeted like email identity"
# on the previous list, service is the internal name of your service, you can add as many as you want.


# Following options are optional and only useful for debugging.

# To debug the front end, you can set the following to an external backend
KYOO_URL=
# The library root inside the container.
KYOO_LIBRARY_ROOT=/video

# Database things
POSTGRES_USER=KyooUser
POSTGRES_PASSWORD=KyooPassword
POSTGRES_DB=kyooDB
POSTGRES_SERVER=postgres
POSTGRES_PORT=5432

MEILI_HOST="http://meilisearch:7700"
MEILI_MASTER_KEY="ghvjkgisbgkbgskegblfqbgjkebbhgwkjfb"
