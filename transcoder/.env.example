# vi: ft=sh
# shellcheck disable=SC2034

# used to verify who's making the jwt
JWT_ISSUER=$PUBLIC_URL
# keibi's server to retrieve the public jwt secret
AUTH_SERVER=http://auth:4568

# where to store temporary transcoded files
GOCODER_CACHE_ROOT="/cache"
# base absolute path that contains video files (everything in this directory can be served)
GOCODER_SAFE_PATH="/video"
# hardware acceleration profile (valid values: disabled, vaapi, qsv, nvidia)
GOCODER_HWACCEL="disabled"
# the preset used during transcode. faster means worst quality, you can probably use a slower preset with hwaccels
# warning: using vaapi hwaccel disable presets (they are not supported).
GOCODER_PRESET="fast"
# the vaapi device path (only used with GOCODER_HWACCEL=vaapi)
GOCODER_VAAPI_RENDERER="/dev/dri/renderD128"
# the qsv device path (only used with GOCODER_HWACCEL=qsv)
GOCODER_QSV_RENDERER="/dev/dri/renderD128"

# Performance tuning
# Set to true to enable pprof endpoints for profiling (/debug/pprof/). It is not recommended to expose
# this to users or the Internet, as this could be used to leak information via a side-channel attack.
# It is recommended to use a reverse proxy to restrict access to this endpoint, if enabled.
ENABLE_PPROF_ENDPOINT="false"

# Database things
# Setting this ignores the below connection variables and overrides any default values
# POSTGRES_URL=postgres://user:password@host:port/dbname?sslmode=disable
POSTGRES_USER=
POSTGRES_PASSWORD=
POSTGRES_DB=
POSTGRES_SERVER=
POSTGRES_PORT=5432
# can also be "require" ("prefer" is not supported)
POSTGRES_SSLMODE="disable"
# Default is gocoder, you can specify "disabled" to use the default search_path of the user.
#  If this is not "disabled", the schema will be created (if it does not exists) and
#  the search_path of the user will be ignored (only the schema specified will be used).
POSTGRES_SCHEMA=gocoder

# Storage backend
# There are two currently supported backends: local filesystem and s3.
# S3 must be used when running multiple instances of the service. The local filesystem is fine
# for a single instance.

# Local filesystem
GOCODER_METADATA_ROOT="/metadata"

# S3
# Setting this configures the transcoder to use S3 as a backend.
# S3_BUCKET_NAME=my-transcoder-bucket
# All environment variables supported by the AWS SDK for Go (v2) are supported:
# https://docs.aws.amazon.com/sdkref/latest/guide/settings-reference.html#EVarSettings
# AWS_ACCESS_KEY_ID=abc123
# AWS_SECRET_ACCESS_KEY=def456
# AWS_ENDPOINT_URL_S3=https://s3.my-ceph-rgw-deployment.example
# Unless you're running on an actual EC2 instance, you should set this to true.
# This will disable the SDK from trying to use the EC2 metadata service to get credentials,
# reducing startup time.
# If you are actually using an IAM role profile for authentication, this should be set to false
# or be left unset.
AWS_EC2_METADATA_DISABLED="true"
